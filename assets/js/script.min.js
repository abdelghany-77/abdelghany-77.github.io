document.querySelectorAll(".datepicker").forEach(function (e) {
  new Pikaday({ field: e });
});
document.addEventListener("DOMContentLoaded", function () {
  // Get all "View More" buttons
  const viewMoreButtons = document.querySelectorAll(".view-more");

  // click event listener to each button
  viewMoreButtons.forEach((button) => {
    button.addEventListener("click", function () {
      // Get the closest description text element
      const descriptionText =
        this.closest(".card-body-p").querySelector(".description-text");

      // Toggle expanded class
      descriptionText.classList.toggle("expanded");
      // Toggle button text
      if (descriptionText.classList.contains("expanded")) {
        this.textContent = "View Less";
      } else {
        this.textContent = "View More";
      }
    });
  });
});

document.addEventListener("DOMContentLoaded", function () {
  // Animate progress bars when they come into view
  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add("animate");
          observer.unobserve(entry.target);
        }
      });
    },
    { threshold: 0.2 }
  );

  document.querySelectorAll(".skill-progress").forEach((bar) => {
    observer.observe(bar);
  });
});

document.getElementById("current-year").textContent = new Date().getFullYear();

// Form submission handling with animation
document.getElementById("contactForm").addEventListener("submit", function (e) {
  const submitBtn = document.querySelector(".send-btn");
  submitBtn.innerHTML =
    '<span>Sending...</span><i class="fas fa-spinner fa-spin"></i>';
  submitBtn.disabled = true;

  // The form will still submit normally to formspree
  // This is just for visual feedback
  // You can replace this with actual AJAX handling if preferred

  setTimeout(function () {
    // Reset button after 2 seconds just for demo purposes
    // In production, this should be handled by the form response
    submitBtn.innerHTML =
      '<span>Message Sent!</span><i class="fas fa-check"></i>';
    setTimeout(function () {
      submitBtn.innerHTML =
        '<span>Send Message</span><i class="fas fa-arrow-right"></i>';
      submitBtn.disabled = false;
    }, 3000);
  }, 2000);
});

// Back to top button functionality
document.querySelector(".back-to-top").addEventListener("click", function (e) {
  e.preventDefault();
  window.scrollTo({
    top: 0,
    behavior: "smooth",
  });
});

document.addEventListener("DOMContentLoaded", function () {
  // Typing animation
  const typedTextSpan = document.querySelector(".typed-text");
  const cursorSpan = document.querySelector(".cursor");

  const textArray = [
    "Back-End Developer",
    "PHP Specialist",
    "Laravel Developer",
    //  "Problem Solver",
  ];
  const typingDelay = 100;
  const erasingDelay = 50;
  const newTextDelay = 2000;
  let textArrayIndex = 0;
  let charIndex = 0;

  function type() {
    if (charIndex < textArray[textArrayIndex].length) {
      if (!cursorSpan.classList.contains("typing"))
        cursorSpan.classList.add("typing");
      typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
      charIndex++;
      setTimeout(type, typingDelay);
    } else {
      cursorSpan.classList.remove("typing");
      setTimeout(erase, newTextDelay);
    }
  }

  function erase() {
    if (charIndex > 0) {
      if (!cursorSpan.classList.contains("typing"))
        cursorSpan.classList.add("typing");
      typedTextSpan.textContent = textArray[textArrayIndex].substring(
        0,
        charIndex - 1
      );
      charIndex--;
      setTimeout(erase, erasingDelay);
    } else {
      cursorSpan.classList.remove("typing");
      textArrayIndex++;
      if (textArrayIndex >= textArray.length) textArrayIndex = 0;
      setTimeout(type, typingDelay + 1100);
    }
  }

  if (textArray.length) setTimeout(type, newTextDelay + 250);

  // Scroll indicator animation
  const scrollIndicator = document.querySelector(".scroll-indicator");
  scrollIndicator.addEventListener("click", function () {
    window.scrollTo({
      top: window.innerHeight,
      behavior: "smooth",
    });
  });
});

document.addEventListener("DOMContentLoaded", function () {
  // Navbar scroll effect
  const navbar = document.querySelector(".premium-navbar");
  const progressBar = document.querySelector(".scroll-progress-bar");
  let lastScrollTop = 0;

  window.addEventListener("scroll", function () {
    // Progress bar
    const scrollMax =
      document.documentElement.scrollHeight -
      document.documentElement.clientHeight;
    const scrollPercent = (window.scrollY / scrollMax) * 100;
    progressBar.style.width = scrollPercent + "%";

    // Navbar background and shadow
    if (window.scrollY > 50) {
      navbar.classList.add("scrolled");
    } else {
      navbar.classList.remove("scrolled");
    }

    // Hide/show navbar on scroll
    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

    if (scrollTop > lastScrollTop && scrollTop > 300) {
      // Scroll down - hide navbar
      navbar.style.transform = "translateY(-100%)";
    } else {
      // Scroll up - show navbar
      navbar.style.transform = "translateY(0)";
    }

    lastScrollTop = scrollTop <= 0 ? 0 : scrollTop;
  });

  // Active link highlighting
  const navLinks = document.querySelectorAll(".nav-link");
  const sections = document.querySelectorAll("section[id], main[id]");

  window.addEventListener("scroll", function () {
    let current = "";

    sections.forEach((section) => {
      const sectionTop = section.offsetTop;
      const sectionHeight = section.clientHeight;

      if (pageYOffset >= sectionTop - 200) {
        current = section.getAttribute("id");
      }
    });

    navLinks.forEach((link) => {
      link.classList.remove("active");
      if (link.getAttribute("href").includes(current)) {
        link.classList.add("active");
      }
    });
  });

  // Theme toggle functionality
  const themeToggle = document.getElementById("themeToggle");
  const htmlElement = document.documentElement;

  // Check for saved theme preference
  const savedTheme = localStorage.getItem("theme");
  if (savedTheme === "dark") {
    htmlElement.setAttribute("data-theme", "dark");
    themeToggle.checked = true;
  }

  themeToggle.addEventListener("change", function () {
    if (this.checked) {
      htmlElement.setAttribute("data-theme", "dark");
      localStorage.setItem("theme", "dark");
    } else {
      htmlElement.removeAttribute("data-theme");
      localStorage.setItem("theme", "light");
    }
  });

  // Mobile menu closing on click
  const navbarToggler = document.querySelector(".navbar-toggler");
  const navbarCollapse = document.querySelector(".navbar-collapse");

  document.querySelectorAll(".navbar-nav a").forEach(function (navItem) {
    navItem.addEventListener("click", function () {
      if (navbarCollapse.classList.contains("show")) {
        navbarToggler.click();
      }
    });
  });
});

// Image Preview Functionality - Created 2025-04-30
document.addEventListener("DOMContentLoaded", function () {
  // Variables for modal functionality
  const modal = document.getElementById("imagePreviewModal");
  const modalImage = document.getElementById("previewImage");
  const closeButton = modal.querySelector(".modal-close");
  const prevButton = modal.querySelector(".modal-prev");
  const nextButton = modal.querySelector(".modal-next");
  let currentCarousel = null;
  let currentIndex = 0;

  // Update carousel counter
  const updateCarouselCounters = function () {
    document.querySelectorAll(".carousel").forEach((carousel) => {
      const items = carousel.querySelectorAll(".carousel-item");
      const counter = carousel.querySelector(".carousel-counter");
      if (counter) {
        const total = counter.querySelector(".total-slides");
        if (total) {
          total.textContent = items.length;
        }
      }

      // Update counter on slide change
      carousel.addEventListener("slid.bs.carousel", function () {
        const activeIndex = Array.from(items).findIndex((item) =>
          item.classList.contains("active")
        );

        if (counter) {
          const current = counter.querySelector(".current-slide");
          if (current) {
            current.textContent = activeIndex + 1;
          }
        }
      });
    });
  };

  // Initialize fullscreen buttons
  const initializeFullscreenButtons = function () {
    document.querySelectorAll(".carousel").forEach((carousel) => {
      // Create fullscreen button if it doesn't exist
      if (!carousel.querySelector(".carousel-fullscreen-btn")) {
        const fullscreenBtn = document.createElement("button");
        fullscreenBtn.className = "carousel-fullscreen-btn";
        fullscreenBtn.setAttribute("data-carousel", carousel.id);
        fullscreenBtn.innerHTML = '<i class="fas fa-expand"></i>';
        carousel.appendChild(fullscreenBtn);
      }
    });

    // Add event listeners to fullscreen buttons
    document.querySelectorAll(".carousel-fullscreen-btn").forEach((button) => {
      button.addEventListener("click", function () {
        openFullscreen(this.dataset.carousel);
      });
    });
  };

  // Open fullscreen preview
  const openFullscreen = function (carouselId, index = null) {
    currentCarousel = document.getElementById(carouselId);
    const items = currentCarousel.querySelectorAll(".carousel-item img");

    if (index === null) {
      currentIndex = Array.from(
        currentCarousel.querySelectorAll(".carousel-item")
      ).findIndex((item) => item.classList.contains("active"));
    } else {
      currentIndex = index;
    }

    modalImage.src = items[currentIndex].src;
    modalImage.alt = items[currentIndex].alt;
    modal.classList.add("active");
    document.body.style.overflow = "hidden"; // Prevent scrolling
  };

  // Close fullscreen preview
  const closeFullscreen = function () {
    modal.classList.remove("active");
    document.body.style.overflow = ""; // Restore scrolling
    setTimeout(() => {
      modalImage.src = "";
    }, 300);
  };

  // Navigate to previous/next image
  const navigateImages = function (direction) {
    const items = currentCarousel.querySelectorAll(".carousel-item img");
    currentIndex = (currentIndex + direction + items.length) % items.length;
    modalImage.src = items[currentIndex].src;
    modalImage.alt = items[currentIndex].alt;
  };

  // Event listeners
  closeButton.addEventListener("click", closeFullscreen);

  prevButton.addEventListener("click", function () {
    navigateImages(-1);
  });

  nextButton.addEventListener("click", function () {
    navigateImages(1);
  });

  // Close modal with escape key
  document.addEventListener("keydown", function (event) {
    if (event.key === "Escape" && modal.classList.contains("active")) {
      closeFullscreen();
    } else if (
      event.key === "ArrowLeft" &&
      modal.classList.contains("active")
    ) {
      navigateImages(-1);
    } else if (
      event.key === "ArrowRight" &&
      modal.classList.contains("active")
    ) {
      navigateImages(1);
    }
  });

  // Click outside to close
  modal.addEventListener("click", function (event) {
    if (event.target === modal) {
      closeFullscreen();
    }
  });

  // Initialize functionality
  updateCarouselCounters();
  initializeFullscreenButtons();

  // Image lazy loading enhancement
  document.querySelectorAll(".carousel-item img").forEach((img) => {
    img.addEventListener("load", function () {
      this.classList.add("loaded");
    });

    if (img.complete) {
      img.classList.add("loaded");
    }
  });

  // Touch support for mobile
  let touchStartX = 0;
  let touchEndX = 0;

  modal.addEventListener(
    "touchstart",
    function (e) {
      touchStartX = e.changedTouches[0].screenX;
    },
    false
  );

  modal.addEventListener(
    "touchend",
    function (e) {
      touchEndX = e.changedTouches[0].screenX;
      handleSwipe();
    },
    false
  );

  function handleSwipe() {
    if (touchEndX < touchStartX - 50) {
      // Swipe left - next image
      navigateImages(1);
    }
    if (touchEndX > touchStartX + 50) {
      // Swipe right - previous image
      navigateImages(-1);
    }
  }
});
